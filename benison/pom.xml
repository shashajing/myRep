<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.shashajing</groupId>
  <artifactId>benison</artifactId>
  <version>1.0</version>
  <packaging>war</packaging>

  <name>benison</name>
  <url>http://maven.apache.org</url>

 <!-- 项目属性 -->
  <properties>
  	<!-- 主要依赖库的版本定义 -->
	<benison.version>1.0</benison.version>
	<spring.version>3.2.3.RELEASE</spring.version>
	<struts2.version>2.3.14.2</struts2.version>
	<!--  
	<hibernate.version>4.2.3.Final</hibernate.version>
	-->
	<mybatis.version>3.2.2</mybatis.version>
	<shiro.version>1.2.2</shiro.version>
	<cxf.version>2.7.5</cxf.version>
	<activemq.version>5.7.0</activemq.version>
	<quartz.version>2.2.0</quartz.version>
    <jedis.version>2.1.0</jedis.version>
    <!-- java开源缓存框架，和hibernate配合使用（二级缓存）
	<ehcache.version>2.6.6</ehcache.version>
	-->
	<!-- spymemcached是一个memcached的客户端 
	<spymemcached.version>2.9.1</spymemcached.version>
	-->
	<!-- 一个跟对象到关系数据库关系不紧密的类库,主要作用是用来实现用户输入的验证信息 
	<hibernate-validator.version>4.3.1.Final</hibernate-validator.version>
	-->
	<!-- 是一个用来访问远程 JMX MBeans 的崭新方法,与 JSR-160 连接器不同的是,它使用基于 HTTP 的 JSON 格式作为通讯协议,提供 JMX 批量操作 
	<jolokia.version>1.1.2</jolokia.version>
	-->
	<!-- 2.1.5 -->
	<jackson.version>1.8.2</jackson.version>
	<slf4j.version>1.7.5</slf4j.version>
	<!--Logback是由log4j创始人设计的又一个开源日志组件 -->
	<logback.version>1.0.13</logback.version>
	<commons-lang3.version>3.1</commons-lang3.version>
	<commons-io.version>2.4</commons-io.version>
	<guava.version>14.0.1</guava.version>
	<!-- 一个面向 Java™ 平台的易于使用的开源时间/日期库 -->
	<joda-time.version>2.2</joda-time.version>
	<!--  dozer是一种JavaBean的映射工具,类似于apache的BeanUtils -->
	<dozer.version>5.4.0</dozer.version>
	<httpclient.version>4.2.5</httpclient.version>
	<freemarker.version>2.3.20</freemarker.version>
	<junit.version>4.11</junit.version>
	<!-- Mockito 是一个基于MIT协议的开源java测试框架 -->
	<mockito.version>1.9.5</mockito.version>
	<!-- PowerMock比Mockito强大,能模拟static,private和final的方法,还能模拟构造方法 -->
	<powermock.version>1.5.1</powermock.version>
	<!-- Selenium也是一个用于Web应用程序测试的工具。Selenium测试直接运行在浏览器中，就像真正的用户在操作一样 -->
	<selenium.version>2.33.0</selenium.version>
	<jetty.version>7.6.11.v20130520</jetty.version>
	<!-- Plugin的属性定义 -->
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<jdk.version>1.7</jdk.version>
	
  </properties>
  
  <!-- 依赖项定义 -->
		<dependencies>
			<!-- struts2 begin -->
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-core</artifactId>
				<version>${struts2.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-orm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-test</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-spring-plugin</artifactId>
				<version>${struts2.version}</version>
			</dependency>
			<!-- struts2 end -->

			<!-- j2ee web begin -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<!--scope>provided</scope -->
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>

			<!-- j2ee web end -->

			<!-- spring begin -->
			<!-- base -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- aop -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.6.11</version>
			</dependency>
			<!-- tx -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<!-- spring end -->

			<!-- database begin -->
			<!-- mybatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>3.2.2</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.2.0</version>
			</dependency>
			<dependency>
				<groupId>com.ibatis</groupId>
				<artifactId>ibatis-sqlmap</artifactId>
				<version>2.1.0.565</version>
			</dependency>
			<!-- spring orm -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- datasource pool -->
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp</artifactId>
				<version>0.7.1.RELEASE</version>
			</dependency>
			<!-- oracle 
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc14</artifactId>
				<version>10.2.0.4.0</version>
			</dependency>-->
			<!-- mysql -->
			<dependency> 
				<groupId>mysql</groupId> 
				<artifactId>mysql-connector-java</artifactId> 
				<version>5.1.12</version>
			</dependency> 
			<!-- database end -->

			<!-- SECURITY begin -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-ehcache</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<!-- SECURITY end -->

			<!-- json begin -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<!-- json end -->

			<!-- utils library begin -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.3</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.8</version>
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>1.6</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.2.5</version>
			</dependency>
			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>5.3.2</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.3.1.Final</version>
			</dependency>
			<!-- utils library end -->

			<!-- logging begin -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.1</version>
			</dependency>
			<!-- 为slf4j绑定log4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.16</version>
			</dependency>
			<!-- logging end -->

			<!-- POI begin -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>3.5-FINAL</version>
			</dependency>
			<!-- POI end -->

			<!-- jdom begin -->
			<dependency>
				<groupId>org.jdom</groupId>
				<artifactId>jdom2</artifactId>
				<version>2.0.5</version>
			</dependency>
			<!-- jdom end -->
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>2.4</version>
				<classifier>jdk15</classifier>
			</dependency>

			<!-- SOAP begin -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>2.6.0</version>
				<exclusions>
					<!-- use javax.mail.mail instead -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-javamail_1.4_spec</artifactId>
					</exclusion>
					<!-- use javax.activation.activation instead -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-activation_1.1_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>2.6.0</version>
			</dependency>
			<!-- SOAP end -->

			<!-- test begin -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- test end -->


			<!-- quartz定时任务支持 begin -->
			<dependency>
				<groupId>opensymphony</groupId>
				<artifactId>quartz-all</artifactId>
				<version>1.6.3</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>3.0.4.RELEASE</version>
			</dependency>
			<!-- quartz定时任务支持 end -->
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.5</version>
			</dependency>

			<!-- redis缓存 -->
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>2.2.1</version>
				<type>jar</type>
			</dependency>

			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>1.6.1</version>
			</dependency>
		</dependencies>
  
  
  <build>
  	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.3.2</version>
			<configuration>
				<source>1.7</source>
				<target>1.7</target>
				<encoding>UTF-8</encoding>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>2.9</version>
			<configuration>
				<includes>
					<include>**/**/AllTests.java</include>
				</includes>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>2.1-alpha-1</version>
			<configuration>
				<webResources><!-- 
					<resource>
						<directory>src/main/webconfig</directory>
						<filtering>true</filtering>
						<targetPath>WEB-INF</targetPath>
					</resource> -->
				</webResources>
			</configuration>
		</plugin>
		<!-- cxf wsdl2java 插件 -->
		<plugin>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-codegen-plugin</artifactId>
			<version>2.6.0</version>
			<executions>
				<execution>
					<id>generate-sources</id>
					<phase>generate-sources</phase>
					<configuration>
						<sourceRoot>${basedir}/target/generated-sources/cxf</sourceRoot>
						<wsdlOptions>
							<wsdlOption>
								<wsdl>http://192.168.119.27:8080/dc/services/saleInvoice?wsdl</wsdl>
							</wsdlOption>
						</wsdlOptions>
					</configuration>
					<!-- 
					<goals>
						<goal>wsdl2java</goal>
					</goals>
					 -->
				</execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>maven-jetty-plugin</artifactId>
			<version>6.1.26</version>
			<configuration>  
                <webApp>target/benison.war</webApp>
                <connectors>
                    <connector
                        implementation="org.mortbay.jetty.nio.SelectChannelConnector">  
                        <port>8081</port>
                    </connector>
                </connectors>
                <stopKey>exit</stopKey>
                <stopPort>8089</stopPort>
                <scanIntervalSeconds>2</scanIntervalSeconds>
            </configuration>
		</plugin>
	</plugins>
	<resources>
		<resource>
			<directory>src/main/resources</directory>
			<includes>
				<include>**/*</include>
			</includes>
		</resource>
		<resource>
			<directory>src/main/java</directory>
			<includes>
				<include>**/*.properties</include>
			</includes>
		</resource>
	</resources>
  </build>	
</project>
